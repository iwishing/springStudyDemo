<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.cbw"></context:component-scan>

<!--    配置账户的持久层-->
    <bean id="accountDao" class="com.cbw.dao.impl.AccountDaoImpl">
            <property name="dataSource" ref="dataSource"></property>
    </bean>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/myspringspace"></property>
        <property name="username" value="root"></property>
        <property name="password" value="123456"></property>
    </bean>

<!--    spring中基于xml的声明式事务控制配置步骤

-->
<!--    1.配置事务管理器-->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"></property>
</bean>
<!--    2.配置事务的通知
            此时我们需要导入事务的约束，tx名称空间和约束，同时也需要aop
            使用tx:advice标签配置事务通知
                属性：
                    id：给事务通知起一个唯一标识
                    transaction-manager：给事务通知提供一个事务管理器引用
            -->
<tx:advice id="txAdvice" transaction-manager="transactionManager">
<!--5.配置事务的属性
isolation=""：用于指定事务的隔离级别，默认值是DEFAULT，表示使用数据库的隔离级别
propagation=""用于指定事务的传播行为，默认值是REQUIRED，表示一定会有事务，增删改的选择，查询方法可以选择SUPPORTS
read-only=""用于指定事务是否只读，只有查询方法才能设置为true，默认值是false，表示读写
timeout=""用于指定事务的超时时间，默认值是-1，表示永不超时，如果指定了数值，以秒为单位
no-rollback-for=""用于指定一个异常，表示当该异常发生时事务不回滚，产生其他异常时都回滚，没有默认值，表示任何异常都回滚
rollback-for=""用于指定一个异常，表示当该异常发生时事务回滚，产生其他异常时事务不回滚，没有默认值，表示任何异常都回滚

-->
    <tx:attributes>
        <tx:method name="transfer" propagation="REQUIRED" read-only="false"/>
        <tx:method name="find*" propagation="SUPPORTS" read-only="true"></tx:method>
    </tx:attributes>
</tx:advice>
<!--    3.配置aop中的通用切入点表达式-->
    <aop:config>
        <aop:pointcut id="pt1" expression="execution(* com.cbw.service.impl.*.*(..))"/>
        <!--    4.建立事务通知和切入点表达式的关系-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>
    </aop:config>
</beans>
